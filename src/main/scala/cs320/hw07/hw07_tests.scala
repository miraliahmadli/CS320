// def tests: Unit = {
//   // basic features (10)
//   test(run("42"), "42")
//   test(run("{+ {- 3 2} 4}"), "5")
//   test(run("{fun {x} x}"), "function")
//   test(run("{{fun {x} {+ 1 x}} 1}"), "2")
//   test(run("{if0 0 42 1}"), "42")
//   test(run("{if0 1 2 3}"), "3")
//   test(run("{if0 {fun {x} x} 2 4}"), "4")
//   test(run("{withcc k k}"), "continuation")
//   test(run("{withcc k {+ 1 {k 2}}}"), "2")
//   test(run("{withcc done {{withcc esc {done {+ 1 {withcc k {esc k}}}}} 3}}"), "4")

//   // multiple arguments (20)
//   test(run("{fun {} 1}"), "function")
//   test(run("{fun {} 2}"), "function")
//   test(run("{fun {x y z} {+ x {- y z}}}"), "function")
//   test(run("{fun {a b c d e} 42}"), "function")
//   test(run("{{fun {x y z} {+ x {- y z}}} 3 2 1}"), "4")
//   test(run("{{fun {x y z} 37} 3 2 1}"), "37")
//   test(run("{{fun {a b c d e} {+ a e}} 1 2 3 4 5}"), "6")
//   testExc(run("{{fun {} 1} 2}"), "wrong arity")
//   testExc(run("{{fun {} 1} 1 2 3}"), "wrong arity")
//   testExc(run("{{fun {x y z} 42} 2}"), "wrong arity")
//   testExc(run("{{fun {x y z} 42} 2 3}"), "wrong arity")
//   test(run("{{fun {x y} {if0 y x y}} 3 0}"), "3")
//   test(run("{{fun {x y} {if0 y x y}} 0 4}"), "4")
//   test(run("{{fun {x y} {if0 y x y}} 3 5}"), "5")
//   test(run("{withcc k {{fun {x y z} 42} {k 1} 2 3}}"), "1")
//   test(run("{withcc k {{fun {x y} 42} {k 7} 2}}"), "7")
//   test(run("{{fun {x y} {+ x y}} 4 {withcc k {+ 3 {k 1}}}}"), "5")
//   test(run("{{fun {x y} {+ x y}} 7 {withcc k {- 10 {k 1}}}}"), "8")
//   test(run("{{fun {x y} {- x y}} 12 {withcc k {- 10 {k 8}}}}"), "4")
//   test(run("{{fun {sum} {sum 10}} {fun {n} {{fun {triple} {{fun {t} {if0 {t 2} {t 1} {{t 0} {triple {t 0} {+ {t 1} {t 2}} {- {t 2} 1}}}}} {withcc k {triple k 0 n}}}} {fun {a b c} {fun {x} {if0 x a {if0 {- x 1} b c}}}}}}}"), "55")

//   // exceptions (20)
//   test(run("{try 1 catch 2}"), "1")
//   test(run("{try {+ 4 2} catch {throw}}"), "6")
//   test(run("{try {throw} catch 2}"), "2")
//   test(run("{try {+ 1 {throw}} catch 2}"), "2")
//   test(run("{try {+ 1 {throw}} catch {+ 3 2}}"), "5")
//   test(run("{try {try {throw} catch {+ 3 {throw}}} catch 7}"), "7")
//   test(run("{+ 1 {try {throw} catch 42}}"), "43")
//   test(run("{- 9 {try {throw} catch 3}}"), "6")
//   test(run("{fun {f} {throw}}"), "function")
//   test(run("{fun {f} {+ 1 {throw}}}"), "function")
//   test(run("{{fun {f} {try {f} catch 1}} {fun {} {throw}}}"), "1")
//   test(run("{{fun {f} {try {f} catch 8}} {fun {} {throw}}}"), "8")
//   testExc(run("{throw}"), "no enclosing try-catch")
//   testExc(run("{+ {throw} 1}"), "no enclosing try-catch")
//   testExc(run("{{fun {x} {+ x {throw}}} 1}"), "no enclosing try-catch")
//   testExc(run("{{try {fun {} {throw}} catch 37}}"), "no enclosing try-catch")
//   testExc(run("{try {{fun {x} x}} catch 1}"), "wrong arity")
//   testExc(run("{try {{fun {x} x} 1 2} catch 1}"), "wrong arity")
//   testExc(run("{try {{fun {a b c} 35}} catch 42}"), "wrong arity")
//   testExc(run("{try {{fun {a b c} 35} 1 2} catch 42}"), "wrong arity")
// }
